name: Build/Test/Deploy

on:
  push:

jobs:
  build:
    #if: ${{ github.ref=='refs/heads/master' || github.ref=='refs/heads/feature/gh-deploy' }}
    if: false
    name: Build and push docker image for deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-${{ hashFiles('package*.json') }}

      - name: Login to registry
        run: docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

      - name: Build and tag image
        run: |
          echo "HCAPTCHA_SITE_KEY=$HCAPTCHA_SITE_KEY" >> build.env
          docker run -v "$PWD":/usr/src/app -w /usr/src/app node:12 npm install
          docker build -t $CI_REGISTRY/cucb/website:latest -f deploy/Dockerfile .

      - name: Push image to registry
        run: docker push $CI_REGISTRY/cucb/website:latest
    env:
      CI_REGISTRY_USER: ${{ secrets.CI_REGISTRY_USER }}
      CI_REGISTRY_PASSWORD: ${{ secrets.CI_REGISTRY_PASSWORD }}
      CI_REGISTRY: ${{ secrets.CI_REGISTRY }}
  test:
    name: Build and test
    runs-on: ubuntu-latest
    if: false
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Start server and run tests
        run: docker-compose -f docker-compose.test.yml -f docker-compose.ci.yml up --exit-code-from=cypress
        env:
          CYPRESS_KEY: ${{ secrets.CYPRESS_KEY }}
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-output
          path: |
            cypress/videos/**/*.mp4
            cypress/screenshots/**/*.png
  pulumi:
    name: Create/update infrastructure
    if: always()
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    outputs:
      ip: ${{ steps.update.outputs.ip }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Update infrastructure
        id: update
        run: |
          chmod +x ./pulumi/scripts/*.sh
          ./pulumi/scripts/setup.sh
          ./pulumi/scripts/run.sh
          cd pulumi
          echo "::set-output name=ip::$(pulumi stack output ip)"
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  deploy:
    name: Deploy site to DigitalOcean
    runs-on: ubuntu-latest
    needs: pulumi
    steps:
      - name: Prepare environment
        run: echo $IP
    env:
      IP: ${{ needs.pulumi.outputs.ip }}
